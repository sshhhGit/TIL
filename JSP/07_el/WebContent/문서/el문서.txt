새프로젝트
  07_el
  
● EL, JSTL : 지금부터 스프링까지 현장에서, 사용

EL이란?
 - 표현언어(Expression Language)
 - EL은 JSP2.0에서 부터 추가된 기능이다
 - 새로운 스크립트 언어로써 JSP의 기본 문법을 보완하는 역할을 한ㄷ
 
 표현식 : <%= 내용 %>
 표현언어 : ${내용}
 
 참고 
 JSP 내장객체 : page, request, session, applicattion
 
 ※EL에서 제공하는 기능
 1. pageScope, requsetScope, SessionScope, applicationScope
 2. EL은 집합(Collection)객체에 대한 접근 방법을 제공한다
 	: List, ArrayList, Vector, Map, HashMap(스프링에서 dto대신 사용 할 수 있다)
 3. EL은 수치연산, 관계연산, 논리연산을 할 수 있다
 4. EL은 자바클래스의 메서드를 호출하는 기능을 제공한다 ex) ${객체.메서드()}
 5. EL은 표현언어만의 내장 객체(기본객체)를 제공한다
 
 param == request.getParameter() 와 같은 기능
 paramValues == request.getParameterValues() 와 같은기능
 
 initParam == request.getInitParameter() 와 같은기능
 
 예시 : 
 
 표현식 : <%=request.getMetgod()%>
 표현언어 : ${pageContext.request.method}
 
 표현식 : <%=request.getHeader("host")%>
 표현언어 : ${header.host}
 
 session **********
 
 표현식 : <%=session.getAttribute("userId")%>
 표현언어 : ${sessionScope.userId}
 
 request **********
 
 표현식 : <%=request.getAttribute("userId")%>
 표현언어 : ${requsetScope.userId}
 
 EL 연산자
 
 1. 산술 연산자
  + - *
  / 또는 div...나누기(몫은 아니다)
  % 또는 mod
  
  2. 관계연산자
  
  == 또는 eq 
  != 또는 ne
  >  또는 gt
  >= 또는 ge
  <  또는 lt
  <= 또는 le
  
 3. 논리연산자
 
 && 또는 and
 || 또는 or
 !  또는 not
 
 ※ EL연산자 에서 빈(dto)의 프로퍼티나 Map 요소 접근이 가능하다
 
 ex)
 
 ${dto.name}
 ${map.name}
 
 [] : 배열, List, Map요소 접근은 map.id 또는 map['id']
 () : 연산 우선 순위로 하려고 할 때 () 사용
 
 조건?A:B ==> 조건연산자
 조건이 참이면 A처리
 조건이 거짓이면 B를 처리
 
 true/false
 
 null(널)문자 (공백아님)
 
 empty : 값이 없는 경우(null, 빈 문자열, 값이 없는 배열, Map이나 Collection이 비어있는 경우)
 
 실습
 
 tset01.jsp
 tset02.jsp
 test03Form.jsp
 test03Pro.jsp
 test04_oper.jsp
 test05_requestScope.jsp
 
 