<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="member">
    
    <!-- 총 회원 수 -->
	<select id="selectCount" resultType="int">
	  select count(*) from member
	</select>
    
    <!-- 모든 회원 정보 리스트 -->
    <select id="selectAll" parameterType="java.util.Map" resultType="memberDTO">
      select * from member
      order by regdate asc
      limit #{start},#{cnt}
    </select>
    
    <!-- ID중복체크, 회원정보 수정 -->
    <select id="selectOne" parameterType="String" resultType="memberDTO">
      select * from member
      where id=#{id}
    </select>
    
    <!-- 회원가입 -->
    <insert id="insertMember" parameterType="memberDTO">
      insert into member(id,pw,name,email,tel,zipcode,addr,addr2,regdate)
      values(#{id},#{pw},#{name},#{email},#{tel},#{zipcode},#{addr},#{addr2},NOW())
    </insert>
    
    <!-- 로그인 -->
    <select id="selectLogin" parameterType="map" resultType="memberDTO">
      select * from member
      where id=#{id} and pw=#{pw}
    </select>
    
    <!-- 이메일인증 여부 체크 -->
    <select id="authStatusCheck" parameterType="map" resultType="String">
      select authStatus from member
      where id=#{id} and pw=#{pw}
    </select>
    
    <!-- 회원탈퇴 여부 체크 -->
    <select id="memberDeleteCheck" parameterType="map" resultType="String">
      select isDelete from member
      where id=#{id} and pw=#{pw}
    </select>
    
    <!-- 회원정보 수정 -->
    <update id="memberUpdate" parameterType="memberDTO">
      update member
      set name=#{name},email=#{email},tel=#{tel},zipcode=#{zipcode},addr=#{addr},addr2=#{addr2},regdate=NOW() where id=#{id}
    </update>
    
    <!-- 비밀번호 변경 -->
    <update id="pwUpdate" parameterType="memberDTO">
      update member
      set pw=#{pw} where id=#{id}
    </update>
    
    <!-- 회원 탈퇴 -->
    <update id="memberDelete" parameterType="String">
      update member 
      set isDelete='Y' where id=#{id}
    </update>
    
    <!-- 회원 복구 -->
    <update id="memberRestore" parameterType="String">
      update member 
      set isDelete='N' where id=#{id}
    </update>
    
    <!-- authKey(인증번호) 업데이트 -->
    <update id="updateAuthKey" parameterType="memberDTO">
      update member 
      set authKey=#{authKey} where email=#{email}
    </update>
    
    <!-- authKey(인증번호) 비교 -->
    <update id="updateAuthStatus" parameterType="memberDTO">
      update member 
      set authStatus='Y' 
      where email=#{email} and authKey=#{authKey}
    </update>
    </mapper>